[
    { "keys": ["ctrl+k", "g", "l"], "command": "get_location_current" },

    // Origami
    { "keys": ["ctrl+k", "o", "z"], "command": "zoom_pane", "args": {"fraction": 0.9} },
    { "keys": ["ctrl+k", "o", "x"], "command": "unzoom_pane", "args": {} },
    { "keys": ["ctrl+k", "o", "c"], "command": "resize_pane", "args": {"orientation": "cols"} },
    { "keys": ["ctrl+k", "o", "r"], "command": "resize_pane", "args": {"orientation": "rows"} },

    // Find Results
    { "keys": ["f4"], "command": "current_result" },
    { "keys": ["shift+f4"], "command": "next_result" },
    { "keys": ["shift+alt+f4"], "command": "prev_result" },


    // Elevator keybinds
    { "keys": ["alt+up", "<character>"], "command": "elevator_move", "args": { "forward": false } },
    { "keys": ["alt+up", "up"], "command": "elevator_move", "args": { "forward": false, "character": "up" } },
    { "keys": ["alt+down", "<character>"], "command": "elevator_move", "args": { "forward": true } },
    { "keys": ["alt+down", "down"], "command": "elevator_move", "args": { "forward": true, "character": "down" } },


    // override default multi-cursor
    { "keys": ["ctrl+alt+up"], "command": "select_lines", "args": {"forward": false } },
    { "keys": ["ctrl+alt+down"], "command": "select_lines", "args": {"forward": true} },

    { "keys": ["ctrl+f4"], "command": "current_result"},
    // Override paste
    { "keys": ["ctrl+v"], "command": "paste_and_indent" },


    // Toggle the default shell in panel
    { "keys": ["alt+`"], "command": "toggle_terminus_panel" },


    // Run Code Action
    {
        "keys": ["alt+space"],
        "command": "lsp_code_actions",
        "context": [
            {"key": "lsp.session_with_capability", "operand": "codeActionProvider"}
        ]
    },

    // So you don't use that üêÅ
    {
        "keys": ["ctrl+alt+space"],
        "command": "lsp_hover",
        "context": [
            {"key": "lsp.session_with_capability", "operand": "hoverProvider"}
        ]
    },

    // Goto Definition
    {
        "keys": ["f12"],
        "command": "lsp_symbol_definition",
        "args": {"side_by_side": false, "force_group": true, "fallback": true, "group": -1},
        "context": [
            {"key": "lsp.session_with_capability", "operand": "definitionProvider"},
            {"key": "auto_complete_visible", "operand": false}
        ]
    },
    // Goto Definition (side-by-side)
    {
        "keys": ["primary+f12"],
        "command": "lsp_symbol_definition",
        "args": {"side_by_side": true, "force_group": true, "fallback": true, "group": -1},
        "context": [
            {"key": "lsp.session_with_capability", "operand": "definitionProvider"},
            {"key": "auto_complete_visible", "operand": false}
        ]
    },
    // Find References (side-by-side)
    {
        "keys": ["primary+shift+f12"],
        "command": "lsp_symbol_references",
        "args": {"side_by_side": true, "force_group": true, "fallback": true, "group": -1},
        "context": [{"key": "lsp.session_with_capability", "operand": "referencesProvider"}]
    },
    // Goto Type Definition
    {
        "keys": ["alt+f12"],
        "command": "lsp_symbol_type_definition",
        "args": {"side_by_side": false, "force_group": true, "group": -1},
        "context": [
            {"key": "lsp.session_with_capability", "operand": "typeDefinitionProvider"},
            {"key": "auto_complete_visible", "operand": false}
        ]
    },
    // Document Symbols (a replacement for ST's "Goto Symbol")
    {
        "keys": ["primary+r"],
        "command": "lsp_document_symbols",
        "context": [{"key": "lsp.session_with_capability", "operand": "documentSymbolProvider"}]
    },
    // Workspace Symbols (a replacement for ST's "Goto Symbol In Project")
    {
        "keys": ["primary+shift+r"],
        "command": "lsp_workspace_symbols",
        "context": [{"key": "lsp.session_with_capability", "operand": "workspaceSymbolProvider"}]
    },
    // Fallbacks
    {
        "keys": ["alt+s", "d"],
        "command": "show_overlay", "args": {"overlay": "goto", "text": "@"}
    },
    {
        "keys": ["alt+s", "p"],
        "command": "goto_symbol_in_project"
    },
    // Expand Selection (a replacement for ST's "Expand Selection")
    // {
    //     "keys": ["primary+shift+a"],
    //     "command": "lsp_expand_selection",
    //     "args": {"fallback": true},
    //     "context": [{"key": "lsp.session_with_capability", "operand": "selectionRangeProvider"}]
    // },

    // Fix expand selection on markdown
    { "keys": ["ctrl+shift+a"], "command": "expand_selection", "args": {"to": "smart"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "(text.html.markdown) - source", "match_all": true }
        ]
    },

    // BracketHighlighter
    // Override core feature
    {
        "keys": ["ctrl+m"],
        "command": "bh_key",
        "args": {
            "plugin": {
                "args": {"select": "right", "alternate": true},
                "command": "bh_modules.bracketselect"
            },
            "lines": true,
            "no_outside_adj": null
        }
    },
    // Go to right bracket
    {
        "keys": ["ctrl+]"],
        "command": "bh_key",
        "args":
        {
            "no_outside_adj": null,
            "no_block_mode": null,
            "lines" : true,
            "plugin":
            {
                "command": "bh_modules.bracketselect",
                "args": {"select": "right"}
            }
        }
    },
    // Go to left bracket
    {
        "keys": ["ctrl+["],
        "command": "bh_key",
        "args":
        {
            "no_outside_adj": null,
            "no_block_mode": null,
            "lines" : true,
            "plugin":
            {
                "command": "bh_modules.bracketselect",
                "args": {"select": "left"}
            }
        }
    },
    // Select text between brackets
    {
        "keys": ["alt+[", "a"],
        "command": "bh_key",
        "args":
        {
            "lines" : true,
            "plugin":
            {
                "command": "bh_modules.bracketselect"
            },
            "no_outside_adj": null,
        }
    },
    {
        "keys": ["alt+[", "x"],
        "command": "bh_remove_brackets",
        // "command": "bh_key",
        // "args": {
        //     "plugin": {
        //         "args": {"remove_block": false, "remove_content": false, "remove_indent": false},
        //         "command": "bh_modules.bracketremove",
        //         "type": ["__all__"]
        //     }
        // }
    },
    // Fold contents between brackets
    {
        "keys": ["ctrl+shift+["],
        "command": "bh_key",
        "args":
        {
            "plugin": {
                "command" : "bh_modules.foldbracket"
            }
        }
    },
    // BH workaround for jsx/tsx
    {
        "keys": ["ctrl+shift+["],
        "command": "fold",
        "context": [
            {
                "key": "selector",
                "operator": "equal",
                "operand": "(source.tsx, source.jsx) & meta.jsx"
            }
        ]
    },
    // Swap brackets
    {
        "keys": ["alt+[", "up"],
        "command": "swap_brackets"
    },
    // Wrap smart selection to brackets
    {
        "keys": ["alt+[", "down"],
        "command": "chain",
        "context": [{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }],
        "args": {
            "commands": [
                {"command": "expand_selection", "args": {"to": "smart"}},
                {"command": "wrap_brackets"}
            ]
        }
    },
    {
        "keys": ["alt+'"],
        "command": "bh_key",
        "args":
        {
            "lines" : true,
            "plugin":
            {
                "type": ["single_quote", "double_quote", "py_single_quote", "py_double_quote"],
                "command": "bh_modules.swapquotes"
            }
        }
    },
    {
        "keys": ["alt+[", "right"],
        "command": "bh_key",
        "args":
        {
            "no_outside_adj": null,
            "no_block_mode": null,
            "lines" : true,
            "plugin":
            {
                "command": "bh_modules.bracketselect",
                "args": {"select": "right", "extend": true}
            }
        }
    },
    {
        "keys": ["alt+[", "left"],
        "command": "bh_key",
        "args":
        {
            "no_outside_adj": null,
            "no_block_mode": null,
            "lines" : true,
            "plugin":
            {
                "command": "bh_modules.bracketselect",
                "args": {"select": "left", "extend": true}
            }
        }
    },
    { "keys": ["alt+]"], "command": "reindent", "args": {"single_line": true} },

    // Copilot
    {
        "keys": ["tab"],
        "command": "copilot_accept_completion",
        "context": [
            {
                "key": "copilot.is_on_completion"
            }
        ]
    },

    // gitsavvy
    // fixup goto help
    {
        "keys": ["ctrl+enter"],
        "command": "gs_help_goto_link",
        "context": [
            { "key": "setting.command_mode", "operator": "equal", "operand": false },
            { "key": "setting.git_savvy.help_view", "operator": "equal", "operand": true },
            { "key": "selector", "operator": "equal", "operand": "meta.link.inline.description.markdown"}
        ]
    },
]
